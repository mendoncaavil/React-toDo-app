{"version":3,"sources":["components/Util/ListItem.js","components/Util/ToDoList.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","react_default","a","createElement","className","text","onClick","deleteItem","id","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","Locale_Storage_Key","ToDoList","_useState","useState","_useState2","Object","slicedToArray","todos","setTodos","filter","todo","useEffect","storedTodos","JSON","parse","localStorage","getItem","length","setItem","stringify","_useState3","_useState4","todoInput","setTodoInput","type","placeholder","onChange","e","target","value","Math","random","concat","toConsumableArray","map","Util_ListItem","body","display","justifyContent","alignItems","height","backgroundColor","padding","ToDoListContainer","flexDirection","borderRadius","width","App","style","Util_ToDoList","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"+NAmBeA,MAhBf,SAAkBC,GAMd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAIH,EAAMK,MACVJ,EAAAC,EAAAC,cAAA,OAAKG,QAPQ,WACjBN,EAAMO,WAAWP,EAAMQ,KAMSC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAeT,UAAU,WAC5IH,EAAAC,EAAAC,cAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,2ECThEC,SAAqB,mBAkDZC,MA/Cf,SAAkBlB,GAAM,IAAAmB,EAGEC,mBAAS,IAHXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGjBK,EAHiBH,EAAA,GAGVI,EAHUJ,EAAA,GAetB,SAASd,EAAWC,GAClBiB,EAASD,EAAME,OAAO,SAACC,GAAD,OAASA,EAAKnB,KAAMA,KAX9CoB,oBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQhB,IACjDY,GAAaJ,EAASI,IACxB,IAEHD,oBAAU,WACLJ,EAAMU,OAAS,GAClBF,aAAaG,QAAQlB,EAAoBa,KAAKM,UAAUZ,KACxD,CAACA,IAbqB,IAAAa,EAmBYjB,qBAnBZkB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GAmBfE,EAnBeD,EAAA,GAmBJE,EAnBIF,EAAA,GAkCpB,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,OAAOC,YAAY,aAAaC,SAhBhC,SAACC,GAEnBJ,EAAaI,EAAEC,OAAOC,QAcmDA,MAAOP,IAC1EtC,EAAAC,EAAAC,cAAA,UAAQG,QAXK,SAACsC,GACH,IAAbL,IAEJd,EAAQ,CAAE,CAAEjB,GAAoB,IAAhBuC,KAAKC,SAAkB3C,KAAMkC,IAArCU,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAqDE,KAC7DgB,EAAa,OAOP,kBAEDhB,EAAM2B,IAAI,SAACxB,GAAD,OACT1B,EAAAC,EAAAC,cAACiD,EAAD,CAAU/C,KAAMsB,EAAKtB,KAAMG,GAAImB,EAAKnB,GAAID,WAAYA,QC7CxD8C,EAAO,CACTC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,gBAAiB,UACjBC,QAAS,QAKPC,EAAoB,CACxBN,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZK,cAAe,SACfH,gBAAiB,OACjBI,aAAc,OACdC,MAAO,SAwCMC,MAXf,WACE,OACE/D,EAAAC,EAAAC,cAAA,OAAK8D,MAAOZ,GACVpD,EAAAC,EAAAC,cAAA,OAAK8D,MAAOL,GACR3D,EAAAC,EAAAC,cAAA,wBACDF,EAAAC,EAAAC,cAAC+D,EAAD,SC3CMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA1B,EAAA,GAAA2B,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlF,EAAAC,EAAAC,cAACF,EAAAC,EAAMkF,WAAP,KACEnF,EAAAC,EAAAC,cAACkF,EAAD,QAOJlB","file":"static/js/main.5b0c16eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './ListItem.css'\r\n\r\nfunction ListItem(props){\r\n\r\n    const handleDelete = () => {\r\n        props.deleteItem(props.id);\r\n    }\r\n\r\n    return(\r\n        <div className=\"toDo-item\">\r\n            <p>{props.text}</p>\r\n            <svg onClick={handleDelete} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem ","import React, {useState, useEffect} from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport './ToDoList.css'\r\n\r\nconst Locale_Storage_Key = \"react-app-todos\" \r\n\r\n\r\nfunction ToDoList(props){\r\n\r\n    // This is state variable - React changes this variable. So we need to create this.\r\nconst [todos, setTodos] = useState([]);\r\n\r\nuseEffect(()=>{\r\n  const storedTodos = JSON.parse(localStorage.getItem(Locale_Storage_Key));\r\n  if(storedTodos) setTodos(storedTodos);\r\n}, []);\r\n\r\nuseEffect(()=>{\r\n  if(todos.length > 0)\r\n  localStorage.setItem(Locale_Storage_Key, JSON.stringify(todos));\r\n},[todos])\r\n\r\n  function deleteItem(id){\r\n    setTodos(todos.filter((todo)=> todo.id !==id))\r\n  }\r\n\r\n  const [todoInput, setTodoInput] = useState()\r\n\r\n  const handleInput = (e) => {\r\n    // console.log(e.target.value)\r\n    setTodoInput(e.target.value)\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    if (todoInput == \"\") return;\r\n\r\n    setTodos([{ id: Math.random() * 10000, text: todoInput }, ...todos,]);\r\n    setTodoInput(\"\");\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-container\">\r\n        <div className=\"toDo-input-form\">       \r\n          <input type=\"text\" placeholder=\"Add a ToDo\" onChange={handleInput} value={todoInput} />\r\n          <button onClick={handleSubmit} >Add your ToDo</button>\r\n        </div>\r\n        {todos.map((todo) => (\r\n          <ListItem text={todo.text} id={todo.id} deleteItem={deleteItem}/>\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList ","import React from \"react\";\nimport ToDoList from \"../Util/ToDoList\";\n\nconst body = {\n    display: \"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: '#282c34',\n    padding: \"10px\",\n}\n\n\n\nconst ToDoListContainer = {\n  display: \"flex\",\n  justifyContent: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  backgroundColor: 'aqua',\n  borderRadius: '10px',\n  width: '400px',\n}\n// This is normal variable. It doesnt change.\n// const todos = [\n//   {\n//       id:1,\n//       text: 'learn react',\n//       isCompleted: false\n//   },\n//   {\n//       id:2,\n//       text: 'learn mern',\n//       isCompleted: false\n//   },\n//   {\n//       id:3,\n//       text: 'learn mongodm',\n//       isCompleted: false\n//   },\n//   {\n//       id:4,\n//       text: 'learn appledc',\n//       isCompleted: false\n//   }\n// ]\n\n\n\n\nfunction App(){\n  return(\n    <div style={body}>\n      <div style={ToDoListContainer}>\n          <h1>To Do List</h1>   \n         <ToDoList/>       \n      </div>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}